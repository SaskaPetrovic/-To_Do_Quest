!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t||self).StimulusFormProgressBar={})}(this,function(t){function e(t,r){return(e=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,r)}function r(t){return t.replace(/(?:[_-])([a-z0-9])/g,(t,e)=>e.toUpperCase())}function n(t){return t.charAt(0).toUpperCase()+t.slice(1)}function a(t,e){const r=s(t);return Array.from(r.reduce((t,r)=>(function(t,e){const r=t[e];return Array.isArray(r)?r:[]}(r,e).forEach(e=>t.add(e)),t),new Set))}function s(t){const e=[];for(;t;)e.push(t),t=Object.getPrototypeOf(t);return e.reverse()}function i([t,e]){return function(t,e){const n=`${s=t,s.replace(/([A-Z])/g,(t,e)=>`-${e.toLowerCase()}`)}-value`,a=function(t){const e=function(t){const e=u(t.type);if(e){const r=o(t.default);if(e!==r)throw new Error(`Type "${e}" must match the type of the default value. Given default value: "${t.default}" as "${r}"`);return e}}(t),r=o(t),n=u(t),a=e||r||n;if(a)return a;throw new Error(`Unknown value type "${t}"`)}(e);var s;return{type:a,key:n,name:r(n),get defaultValue(){return function(t){const e=u(t);if(e)return c[e];const r=t.default;return void 0!==r?r:t}(e)},get hasCustomDefaultValue(){return void 0!==o(e)},reader:l[a],writer:f[a]||f.default}}(t,e)}function u(t){switch(t){case Array:return"array";case Boolean:return"boolean";case Number:return"number";case Object:return"object";case String:return"string"}}function o(t){switch(typeof t){case"boolean":return"boolean";case"number":return"number";case"string":return"string"}return Array.isArray(t)?"array":"[object Object]"===Object.prototype.toString.call(t)?"object":void 0}(()=>{try{!function(){const t=function(t){function e(){return Reflect.construct(t,arguments,new.target)}return e.prototype=Object.create(t.prototype,{constructor:{value:e}}),Reflect.setPrototypeOf(e,t),e}(function(){this.a.call(this)});t.prototype.a=function(){},new t}()}catch(t){return t=>class extends t{}}})();const c={get array(){return[]},boolean:!1,number:0,get object(){return{}},string:""},l={array(t){const e=JSON.parse(t);if(!Array.isArray(e))throw new TypeError("Expected array");return e},boolean:t=>!("0"==t||"false"==t),number:t=>Number(t),object(t){const e=JSON.parse(t);if(null===e||"object"!=typeof e||Array.isArray(e))throw new TypeError("Expected object");return e},string:t=>t},f={default:function(t){return`${t}`},array:d,object:d};function d(t){return JSON.stringify(t)}class h{constructor(t){this.context=t}static get shouldLoad(){return!0}get application(){return this.context.application}get scope(){return this.context.scope}get element(){return this.scope.element}get identifier(){return this.scope.identifier}get targets(){return this.scope.targets}get classes(){return this.scope.classes}get data(){return this.scope.data}initialize(){}connect(){}disconnect(){}dispatch(t,{target:e=this.element,detail:r={},prefix:n=this.identifier,bubbles:a=!0,cancelable:s=!0}={}){const i=new CustomEvent(n?`${n}:${t}`:t,{detail:r,bubbles:a,cancelable:s});return e.dispatchEvent(i),i}}h.blessings=[function(t){return a(t,"classes").reduce((t,e)=>{return Object.assign(t,{[`${r=e}Class`]:{get(){const{classes:t}=this;if(t.has(r))return t.get(r);{const e=t.getAttributeName(r);throw new Error(`Missing attribute "${e}"`)}}},[`${r}Classes`]:{get(){return this.classes.getAll(r)}},[`has${n(r)}Class`]:{get(){return this.classes.has(r)}}});var r},{})},function(t){return a(t,"targets").reduce((t,e)=>{return Object.assign(t,{[`${r=e}Target`]:{get(){const t=this.targets.find(r);if(t)return t;throw new Error(`Missing target element "${r}" for "${this.identifier}" controller`)}},[`${r}Targets`]:{get(){return this.targets.findAll(r)}},[`has${n(r)}Target`]:{get(){return this.targets.has(r)}}});var r},{})},function(t){const e=function(t,e){return s(t).reduce((t,e)=>(t.push(...function(t,e){const r=t.values;return r?Object.keys(r).map(t=>[t,r[t]]):[]}(e)),t),[])}(t),r={valueDescriptorMap:{get(){return e.reduce((t,e)=>{const r=i(e),n=this.data.getAttributeNameForKey(r.key);return Object.assign(t,{[n]:r})},{})}}};return e.reduce((t,e)=>Object.assign(t,function(t){const e=i(t),{key:r,name:a,reader:s,writer:u}=e;return{[a]:{get(){const t=this.data.get(r);return null!==t?s(t):e.defaultValue},set(t){void 0===t?this.data.delete(r):this.data.set(r,u(t))}},[`has${n(a)}`]:{get(){return this.data.has(r)||e.hasCustomDefaultValue}}}}(e)),r)}],h.targets=[],h.values={};var g=function(t){var r,n;function a(){return t.apply(this,arguments)||this}n=t,(r=a).prototype=Object.create(n.prototype),r.prototype.constructor=r,e(r,n);var s=a.prototype;return s.connect=function(){this.hasIncrementValue||(this.incrementValue=this._setDefaultIncrement()),this.minWidthValue=this.widthValue||0},s.updateProgressBar=function(){var t=!1;if("radio"===event.target.type){var e=this.element.querySelectorAll('[name="'+event.target.name+'"]');t=!Array.from(e).some(function(t){return Boolean(event.target.dataset.filled)&&JSON.parse(event.target.dataset.filled)}),e.forEach(function(t){return t.dataset.filled=!0}),event.target.dataset.filled=!1}else t=event.target.validity.valid&&!event.target.validity.valueMissing||event.target.checked;if(t){if(event.target.dataset.filled&&JSON.parse(event.target.dataset.filled))return;this._incrementBar(this.incrementValue),event.target.dataset.filled=!0}else event.target.validity.valueMissing&&(this._decrementBar(this.incrementValue),event.target.dataset.filled=!1)},s.widthValueChanged=function(){this.widthValue>=100?this.widthValue=100:this.widthValue<=this.minWidthValue&&(this.widthValue=this.minWidthValue),this.barTarget.style.width=this.widthValue+"%"},s._incrementBar=function(t){this.widthValue+=t},s._decrementBar=function(t){this.widthValue-=t},s._setDefaultIncrement=function(){var t=new Set(Array.from(this.element.querySelectorAll("[data-action*='progress-bar#updateProgressBar']")).map(function(t){return t.name})).size;return(100-this.minWidthValue)/t},a}(h);g.targets=["bar"],g.values={width:Number,increment:Number,minWidth:Number},t.ProgressBar=g});
//# sourceMappingURL=stimulus-form-progress-bar.umd.js.map
